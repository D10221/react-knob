{"version":3,"sources":["../../../react-css/dist/randomName.ts.js","../../../react-css/dist/useStyle.ts.js","../../../react-css/dist/createStyle.ts.js","../../../react-css/dist/index.ts.js","../../../react-knob-skin-svg-simple/build/index.js","../../../react-rotate/build/index.js","../../src/defaults.ts","../../src/KnobContainer.tsx","../../src/utils.ts","../../src/KnobOverlay.tsx","../../src/Knob.tsx","../../src/KnobState.ts","../../src/PointerHandler.tsx","../../src/index.tsx","../../src/randomName.ts","../../src/createStyle.ts","../../src/useStyle.ts","../../src/classNames.ts","../../src/index.ts","serviceWorker.js","index.tsx"],"names":["AZ","i","String","fromCharCode","let","az","_09_","__internal","chars","randomChar","charAt","Math","floor","random","length","randomName","size","gen","seed","useStyle","style","className","useEffect","element","styles","inject","document","createElement","innerHTML","head","appendChild","removeChild","classNames","names","filter","Boolean","join","const","circleClass","dialClass","DEFAULT_STYLES","circle","dial","DEFAULT_CLASSES","SimpleSkin","props","React","viewBox","focusable","Object","touchAction","rest","cx","cy","r","classes","x","y","Rotate","transform","transformOrigin","Fragment","Children","map","child","isValidElement","cloneElement","KnobContainer","width","height","children","c","pointerEvents","getNormalizedValue","value","min","max","KnobOverlay","baseLineStyle","position","top","left","backgroundColor","overlayColor","cursorPos","knobCenter","sqrt","atan2","PI","verticalLineScale","scale","assign","opacity","topPosition","overlay","zIndex","window","innerWidth","innerHeight","cursor","knobPath","bodyPath","topPath","centerPath","bottomPath","t","undefined","onChange","useState","setState","start","move","done","useKnobState","val","_onchange","onPointerDown","ev","preventDefault","currentTarget","HTMLElement","startY","clientY","knobRect","getBoundingClientRect","onDown","rect","node","doc","ownerDocument","addEventListener","onPointerMove","removeEventListeners","removeEventListener","onUp","me","clientX","abs","number","increment","offset","unnormalizedValue","step","round","onMove","rotation","bufferSize","containerProps","KnobSkin","circleClassName","Circle","borderColor","color","dialClassName","Dial","css","location","hostname","match","Icon","label","role","aria-label","aria-hidden","skins","key","display","initialState","dialogOpen","skin","ReactDOM","render","_setState","update","onValueChanged","onInputValueChanged","e","target","valueAsNumber","onDialogOpenChanged","open","onSizeChanged","onOverlayChanged","checked","onSkinChanged","href","onClick","labels","fill","renderSkin","type","onClickAway","htmlFor","id","body","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qKAIA,I,yCADIA,EAAK,GACAC,EAAI,GAAIA,GAAK,GAASA,IAAKD,GAAME,OAAOC,aAAaF,GAE9D,IADAG,IAAIC,EAAK,GACAJ,EAAI,GAAIA,GAAK,IAASA,IAAKI,GAAMH,OAAOC,aAAaF,GAE9D,IADAG,IAAIE,EAAO,GACFL,EAAI,EAAGA,GAAK,EAAGA,IAAKK,MAAWL,EACxC,IAAaM,EAAa,CACxBC,MAAOR,EAAKK,EAAKC,YAGHG,EAAWD,UAClBA,EAAME,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAAMM,kBAE/BC,EAAWC,yBAAO,aAC/BC,EAAIC,UACPA,EAAKJ,QAAUE,EAAaE,EAEzBD,EAAIC,EADET,EAAWF,EAAWC,QAHG,CAM7BC,EAAWT,EAAKK,aClBLc,EAASC,EAAeC,yBAAYN,KAC1DO,uCCM8BC,SAQMC,EAAgBH,UAdhDI,SAAUD,OACND,EAAUG,SAASC,cAAc,gBACvCJ,EAAQK,UAAYJ,EACpBE,SAASG,KAAKC,YAAYP,cAGxBG,SAASG,KAAKE,YAAYR,IASrBE,KAAWJ,OAAcG,OATJD,CDNVH,EAAOC,MACpBA,EELT,SAAwBW,sEAGbC,GAASA,EAAMC,OAAOC,SAASC,KAAK,KCCxCC,IAEDC,EAAcvB,IACdwB,EAAYxB,IACZyB,EAAiB,CACnBC,YAAFA,EACAC,aAEIC,EAAkB,CACpBF,YAAFA,EACAC,aAKY,SAAUE,EAAWC,GAUzB,sDAA2BL,kCAA0BG,sLAC7DxB,mDAAoEmB,GACpEnB,EAAS,sCAAuCoB,GACzCO,uCACLC,QAAQ,cACRC,UAAW,QACX3B,UAAWA,EACXD,MAAO6B,iBAEF7B,GACH8B,YAAa,UAEXC,GACJL,4BACEM,GAAG,MACHC,GAAG,MACHC,EAAG,MACHjC,UAAWW,EAAWM,EAAaiB,EAAQb,MAC3CtB,MAAOI,EAAOiB,SAEhBK,0BACEU,EAAE,MAAMC,EAAE,KACVpC,UAAWW,EAAWO,EAAWgB,EAAQb,MACzCtB,MAAOI,EAAOkB,QCjDpBL,IAAMqB,kBAKEtC,EAA6B,CAC7BuC,UAAJA,uDAA8D,SAC1DC,gBAAa,kBAEZd,IAAMnB,cACXmB,IAAMe,SACN,GACAf,IAAMgB,SAASC,yBAAcC,UACvBlB,IAAMmB,eAAeD,GAChBlB,IAAMoB,aAAaF,EAAO,CAC/B5C,MAAO6B,iBACFe,EAAMnB,MAAMzB,MACZA,KAIF4C,OCzBc,2HCa3B3B,IAAM8B,uDDXsB,sFCmBxBrB,4CAEE1B,MAAO6B,kBACLmB,MAAOpD,EACPqD,OAAQrD,GACLI,GAELC,UAAWA,IAEVyB,IAAMgB,SAASC,IAAIO,YAAUC,MACxBzB,IAAMmB,eAAeM,GAAI,OACHA,EAAE1B,wCACnBC,IAAMoB,aAAaK,EAAGtB,oBAE3B7B,MAAO6B,kBAELC,YAAa,OACbsB,cAAe,QACZpD,aAIFmD,OCtCf,SAAgBE,EAAmBC,EAAeC,EAAaC,UACrDF,EAAQC,IAAQC,EAAMD,GRFhC,IQgCOtC,ICxBDwC,iDACU,gCACN,qCACK,qCACD,wCACG,YDEPrB,EACAC,ECDFqB,EAAgB,CACpBC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNb,MAAO,EACPC,OAAQ,EACRa,gBAAiBC,MDNX3B,ECSkD4B,KAAZC,KDRtC5B,ECQkD2B,KAAZC,KDJrC,UAHU1E,KAAK2E,KAAK9B,EAAIA,EAAIC,EAAIA,WACvB9C,KAAK4E,MAAM9B,EAAGD,IACH,IAAM7C,KAAK6E,MCMlCC,EH7BmB,IG6BeC,EAsClClE,EAA+C,UApCpCyB,OAAO0C,OAAO,GAAIb,EAAe,CAChDc,QAAS,GACThC,gBAAiB,cACjBD,wBACgB0B,EAAW,qBAAoBA,EAAW,kFAK3CpC,OAAO0C,OAAO,GAAIb,EAAe,CAChDlB,gBAAiB,aACjBD,wBACgByB,EAAU,qBAAoBS,8BAClCJ,gBAGExC,OAAO0C,OAAO,GAAIb,EAAe,CAC/CnB,wBACgByB,EAAU,qBAAoBS,8CAI7B5C,OAAO0C,OAAO,GAAIb,EAAe,CAClDnB,wBACgByB,EAAU,sBACVS,EAAcJ,EAAoB,+CAIjCxC,OAAO0C,OAAO,GAAIb,EAAe,CAClDnB,wBACgByB,EAAU,sBACVS,EAAcJ,oCAU9BK,QAAS,CACPf,SAAU,QACVgB,OAAQ,IACRf,IAAK,EACLC,KAAM,EACNb,MAAO4B,OAAOC,WACd5B,OAAQ2B,OAAOE,YACfC,OAAQ,YACRjD,YAAa,OACbsB,cAAe,gBAKjB1B,yBAAK1B,MAAOI,EAAOsE,SACjBhD,yBAAK1B,MAAOI,EAAO4E,WACnBtD,yBAAK1B,MAAOI,EAAO6E,WACnBvD,yBAAK1B,MAAOI,EAAO8E,UACnBxD,yBAAK1B,MAAOI,EAAO+E,aACnBzD,yBAAK1B,MAAOI,EAAOgF,0DHvFI,8BACF,8BAFA,iCADC,+BADA,sCADO,wCIqEvB,MAAAC,EAAA,gCACYC,wCACXA,8CACMA,eCvEkBC,SACTC,mBAAS,CACjClB,MAAO,EACPN,UAAW,GACXC,WAAY,GACZQ,YAAa,iBAER,qBAELgB,EACAC,mBAGAC,8CACU,oCACI,sCACC,iCACL,sCACM,GAEVJ,GAAUA,EAASjC,GACvBmC,EAAS,WAAEzB,aAAWC,QAAYK,cAAOG,KAE3CmB,gBACEH,EAAS,CAAEnB,MAAO,EAAGN,UAAW,GAAIC,WAAY,GAAIQ,YAAa,MD+CpDa,EAKoBO,SAHVC,SACJ,mBAAdC,GAA4BD,IAAQxC,GAASyC,EAAUD,uEAI1DE,2CEvCE,8BACF,8BACA,iCACC,sDAIHC,GACJA,EAAGC,iBACKC,yBACWA,aJzCCC,iBI0CdC,EAASJ,EAAGK,QACZC,EAAYJ,EAAsBK,wBAClB,mBAAXC,GAAuBA,EAAO,CAEvCH,QAASL,EAAGK,QACZI,KAAMH,QJrBoBI,EIyDtBC,GJzDsBD,EIyDFR,IJxDjBQ,EAAKE,eAAkBvG,SIyDhCsG,EAAIE,iBAAiB,cAAeC,MACpCH,EAAIE,iBACF,aACA,SAASE,IACPJ,EAAIK,oBAAoB,cAAeF,MACvCH,EAAIK,oBAAoB,YAAaD,MACjB,mBAATE,GAAqBA,UAElC,SA1COH,EAAcI,GACrBA,EAAGjB,iBACKkB,4BAEF9C,EADY/E,KAAK8H,IAAID,GAAWb,EAAS1C,KAAO0C,EAASvD,MAAQ,IAC7C,IAAM,EAC5ByB,EACF6B,GNlEqB,IMmENhC,EACbjB,EAAmBC,EAAOC,EAAKC,INpEZ,IMoEkCc,IAErD+B,EAAS5B,IACXA,EAAc4B,GAEZA,EAAS5B,ENzEU,IMyEkBH,IACvCG,EAAc4B,EN1EO,IM0EgB/B,OJzEtBgD,EAAgBC,EAAoBC,EI6E/CC,GJ7EWH,GI4Ed,IAAgC,KN7EZ,IM6EiChD,IAA9C+B,EAAS5B,IAAgD,KACjBjB,EAAMD,aJ7EvBgE,EI6E6BG,OJ7EjBJ,aAAQE,EI6EejE,OJ7EN+D,GACzD/H,KAAKoI,MAAML,EAASC,GAAaA,EAAYC,GI6E9CC,IAAsBnE,GAASsE,GACjCA,EAAO,CAELtE,MAAOmE,QACPnD,EACAN,UAAW,CAACoD,EAASd,GACrBrC,WAAY,CACVsC,EAAS1C,KAAO0C,EAASvD,MAAQ,EACjCuD,EAAS3C,IAAM2C,EAAStD,OAAS,eAEnCwB,MFTAuB,CAA+B,OACnC1C,MACAC,MACAC,OACAkE,EACAE,cACAnB,eACAS,cAEIW,2CF7DE,8BACF,8BACA,8CACO,KAENxE,EAAmBC,EAAOC,EAAKC,GAAOsE,EAAaA,EAAa,EEwDjED,CAAuB,OAAEvE,MAAOC,MAAKC,aAAKsE,WAE9CpG,kBAACqB,iBACCnD,KAAMA,EACNoG,cAAeA,GACX+B,GAEJrG,kBAACY,GAAOuF,SAAUA,GAAW3E,GAAYxB,kBAACsG,SACxCtD,GAAYD,EACZ/C,kBAAC+B,GACCO,UAAWA,EACXC,WAAYA,EACZK,MAAOA,EACPG,YAAaA,IALW,OV9F9B7F,EAAK,GACAC,EAAI,GAAIA,GAAK,GAASA,IAAKD,GAAME,OAAOC,aAAaF,GAE9D,IADAG,IAAIC,EAAK,GACAJ,EAAI,GAAIA,GAAK,IAASA,IAAKI,GAAMH,OAAOC,aAAaF,GAE9D,IADAG,IAAIE,EAAO,GACFL,EAAI,EAAGA,GAAK,EAAGA,IAAKK,MAAWL,EACxC,IAAaM,EAAa,CACxBC,MAAOR,EAAKK,EAAKC,YAGHG,EAAWD,UAClBA,EAAME,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAAMM,kBAE/BC,EAAWC,yBAAO,aAC/BC,EAAIC,UACPA,EAAKJ,QAAUE,EAAaE,EAEzBD,EAAIC,EADET,EAAWF,EAAWC,QAHG,CAM7BC,EAAWT,EAAKK,aClBLc,EAASC,EAAeC,yBAAYN,KAC1DO,uCCM8BC,SAQMC,EAAgBH,UAdhDI,SAAUD,OACND,EAAUG,SAASC,cAAc,gBACvCJ,EAAQK,UAAYJ,EACpBE,SAASG,KAAKC,YAAYP,cAGxBG,SAASG,KAAKE,YAAYR,IASrBE,KAAWJ,OAAcG,OATJD,CDNVH,EAAOC,MACpBA,EELT,SAAwBW,sEAGbC,GAASA,EAAMC,OAAOC,SAASC,KAAK,gIUC/CC,IAOMgH,EAAkBtI,IAElBuI,4EARuB,sCADP,4EAiBlBxG,uCACEzB,UAAWW,EACTX,EACAF,wHAMcoI,sCACIC,2EAKhBH,KAGAxG,GAEHyB,IAQDmF,EAAgB1I,IAEhB2I,sEA9CuB,4DAqDzB5G,uCACEzB,UAAWW,EACTX,EACAF,iGAKkBqI,2HAOhBC,KAGA5G,GAEHyB,8IAkBLxB,kBAACwG,sBAECE,MAAOA,EACPD,YAAaA,EACblI,UAAWiB,IAEXQ,kBAAC4G,GAAKF,MAAOD,EAAalI,UAAWkB,M,cCnGzC,ICgBoCf,MATJD,SAQMC,EAAgBH,UAdvCI,SAACD,OACND,EAAUG,SAASC,cAAc,gBACvCJ,EAAQK,UAAYJ,EACpBE,SAASG,KAAKC,YAAYP,cAGxBG,SAASG,KAAKE,YAAYR,IASrBE,CAAOA,IAAIJ,OAAcG,QDjBhCxB,EAAK,GACAC,EAAI,GAAIA,GAAK,GAASA,IAAKD,GAAME,OAAOC,aAAaF,GAE9D,IADAG,IAAIC,EAAK,GACAJ,EAAI,GAAIA,GAAK,IAASA,IAAKI,GAAMH,OAAOC,aAAaF,GAE9D,IADAG,IAAIE,GAAO,GACFL,GAAI,EAAGA,IAAK,EAAGA,KAAKK,OAAWL,GACxC,IAAaM,GAAa,CACxBC,MAAOR,EAAKK,EAAKC,aAGHG,GAAWD,UAClBA,EAAME,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAAMM,SAQ1BT,OAR0BS,SAEpBE,yBAAO,aAC/BC,EAAIC,UACPA,EAAKJ,QAAUE,EAAaE,EAEzBD,EAAIC,EADET,GAAWF,GAAWC,QAHG,CAM7BC,GAAWT,EAAKK,KEhBpBgB,O,SAFwBD,EAAeC,yBAAYN,MAC1DO,uCAAgBqI,EAAIvI,EAAOC,MACpBA,GCLT,SAAwBW,mEAGbC,GAASA,EAAMC,OAAOC,SAASC,KAAK,K,6kBCA/C,IAyBe,GAzB0E,YAIpF,IAHH,EAGG,EAHH,SACA,EAEG,EAFH,WACA,EACG,EADH,SAEM,EAA6B,CAC7B,UAAK,iBAAY,EAAZ,2BAAuC,GAAc,EAArD,OACL,gBAAa,WAEjB,OAAK,IAAM,cACX,IAAM,SACN,GACA,IAAM,SAAS,IAAI,GAAU,YAC3B,OAAI,IAAM,eAAe,GAChB,IAAM,aAAa,EAAO,CAC/B,MAAK,MACA,EAAM,MAAM,MADZ,GAEA,KAIF,O,6kBLrBb,IAEM,GAAkB,CACtB,YAAQ,EACR,WAAO,EACL,YAAM,GAGJ,GAAiB,CACnB,YAAM,EACN,WAAK,EACP,YAAQ,GAGJ,GAAmB,KAEnB,GAAmB,KAEnB,GAAa,KA0DJ,GA1CV,YAAyH,IAAtH,EAAsH,EAAtH,UAAsH,IAA3G,kBAA2G,MAlClG,IAkCkG,EAAzE,EAAyE,EAAzE,MAAyE,IAAlE,cAAkE,MAAzD,GAAyD,MAAzC,eAAyC,MAA/B,GAA+B,EAAX,EAAW,qEAO5H,OANA,GAAQ,cAAgB,IACxB,GAAQ,iBAAmB,IAC3B,GAAQ,6DAGH,IACE,uCAAK,UAAW,EACrB,QAAQ,cACR,UAAW,QACX,MAAK,MAEA,EAFA,CAGH,YAAa,UAEX,GAEJ,2BACE,4BACE,GAAG,MACH,GAAG,MACH,EAAG,MACH,UAAW,GAAW,GAAkB,EAAQ,QAChD,MAAK,MAAO,EAAO,UAErB,4BACE,GAAG,MACH,GAAG,MACH,EAAG,MACH,UAAW,GAAW,GAAkB,EAAQ,OAChD,MAAK,MAAO,EAAO,SAErB,kBAAC,GAAM,CACL,SAAU,EACV,OAAQ,GACR,EAAE,OACF,UAAW,GAAW,GAAY,EAAQ,QAC1C,MAAK,MAAO,EAAO,aAQrB,GAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE7C,GAA+D,YAGhE,IAFH,EAEG,EAFH,SACG,EACA,4BACH,OACE,yBACE,QAAQ,cACR,MAAO,CAAE,cAAe,OAAQ,YAAa,SAE7C,wCAAM,iBAAiB,SAAS,WAAW,UAAa,GACrD,KAQH,GAKF,YAAuC,IAApC,EAAoC,EAApC,OAAQ,EAA4B,EAA5B,SAAU,EAAkB,EAAlB,GAAO,EAAW,0CACzC,EAAS,GAAU,EAAO,OAAS,EAAS,GAC5C,IAmBa,EAAW,EAnBlB,GAmBO,EAnBM,GAAa,EAAO,OAAS,GAmBxB,EAnB4B,EAoB7C,WAAW,EAAE,QAAQ,KAtBa,EAGT,mBAAS,IAHA,mBAGlC,EAHkC,KAGxB,EAHwB,KAkBzC,OAdK,EAAS,QACZ,uBAAsB,WACpB,EAAY,EAAQ,KAAI,SAAC,EAAG,GAC1B,OAAO,kBAAC,GAAM,CAAC,SAAU,EAAQ,GAAO,EAAG,IAAG,UAAK,EAAL,kBAAiB,IAC7D,kBAAC,GAAS,eACR,GAAE,UAAK,EAAL,kBAAiB,GACnB,EAAG,MACH,EAAG,OACC,EAAK,CACT,SAAU,aAKb,G,6kBAzHF,IAED,GAAc,KACd,GAAY,KACZ,GAAiB,CACnB,YAAMsE,EACR,UAAM,GAEF,GAAkB,CACpB,YAAMA,EACR,UAAM,GAKM,SAAU,GAAW,GAShC,IACO,EAAkF,EAAlF,UAAW,EAAuE,EAAvE,MADd,EACqF,EAAhE,cAD3B,MACoC,GADpC,EAAM,EACqF,EAAvC,eADpD,MAC8D,GAD9D,EACkF,EADlF,YAC2F,EAD3F,0CAIC,OAFA,GAAQ,gBA1BmB,UA0BnB,qCAA4D,IACpE,GAAQ,sCAAwC,IACzC,uCACL,QAAQ,cACR,UAAW,QACX,UAAW,EACX,MAAK,MAEA,EAFA,CAGH,YAAa,UAEX,GACJ,4BACE,GAAG,MACH,GAAG,MACH,EAAG,MACH,UAAW,GAAW,GAAa,EAAQ,MAC3C,MAAO,EAAO,SAEhB,0BACE,EAAE,MAAM,EAAE,KACV,UAAW,GAAW,GAAW,EAAQ,MACzC,MAAO,EAAO,Q,6BMzCAvE,QACW,cAA7B6D,OAAO4D,SAASC,UAEe,UAA7B7D,OAAO4D,SAASC,UAEhB7D,OAAO4D,SAASC,SAASC,MACvB,2DCTN,IAGMC,GAAO,SAAC,GAAD,QAAGC,aAAH,MAAW,GAAX,MAAetF,aAAf,MAAuB,GAAvB,MAA2BrD,iBAA3B,MAAuC,OAAvC,SACX,0BACEA,UAAWA,EACX4I,KAAK,MACLC,aAAYF,GAAS,GACrBG,eAAchI,QAAQ6H,IAErBtF,IAKC0F,GAAQ,CACZ,CAAEC,IAAK,UAAWC,QAAS,WAC3B,CAAED,IAAK,QAASC,QAAS,OACzB,CAAED,IAAK,QAASC,QAAS,cACzB,CAAED,IAAK,QAASC,QAAS,aACzB,CAAED,IAAK,QAASC,QAAS,iBACzB,CAAED,IAAK,QAASC,QAAS,kBAoD3B,IAAMC,GAAe,CACnB7F,MAAO,EACP8F,YAAY,EACZxJ,KAAM,GACN8E,SAAS,EACT2E,KAhEmB,UAiEnBvB,WAlEkB,KAiMpBwB,KAASC,OAAO,mBA5HJ,WAAO,IAAD,EAIZ/D,mBAAS2D,IAJG,0BAEZ7F,EAFY,EAEZA,MAAO8F,EAFK,EAELA,WAAYxJ,EAFP,EAEOA,KAAM8E,EAFb,EAEaA,QAAS2E,EAFtB,EAEsBA,KAAMvB,EAF5B,EAE4BA,WAC1C0B,EAHc,KAMhB,SAAS/D,EAASgE,GAChBD,EAAU,aACRlG,QAAO8F,aAAYxJ,OAAM8E,UAAS2E,OAAMvB,cACrC2B,IAGP,SAASC,EAAepG,GAClBA,EAAQ,GACRA,EAAQ,KACZmC,EAAS,CAAEnC,UAEb,SAASqG,EAAoBC,GAC3BF,EAAeE,EAAEC,OAAOC,eAE1B,SAASC,EAAoBC,GAC3B,OAAO,kBACLvE,EAAS,CAAE2D,WAAYY,KAE3B,SAASC,EAAcL,GACrBnE,EAAS,CACP7F,KAAMgK,EAAEC,OAAOC,gBAGnB,SAASI,EAAiBN,GACxBnE,EAAS,CACPf,QAASkF,EAAEC,OAAOM,UAGtB,SAASC,EAAcR,GACrBnE,EAAS,CACP4D,KAAMO,EAAEzD,cAAc7C,QAqF1B,OA/EI,oCACE,gCACE,uBAAGwF,aAAW,eAAeuB,KA9HvB,wCA8HN,cAGA,4BAAQpK,UAAU,QAAQqK,QAASP,GAAoB,IACrD,kBAAC,GAAD,CAAMzG,MAAM,SAAIsF,MAAM,eAG1B,8BACE,kBAAC,EAAD,CACEtF,MAAOA,EACPiC,SAAUmE,EACV9J,KAAMA,EACN2D,IAAK,EACLC,IAAK,IACLkE,KAAM,EACNI,WAAYA,EACZpD,QAASA,GApHrB,YAAwE,IAAD,IAAjD2E,YAAiD,MAZlD,UAYkD,MAA5BvB,kBAA4B,MAbnD,IAamD,EACrE,OAAQuB,GACN,IAAK,MAEH,OAAO,kBAAC,EAAD,MAET,IAAK,QACH,OAAO,kBAAC,EAAD,CAASnI,YAAa,gBAE/B,IAAK,QAEH,OACE,kBAAC,GAAD,CACE4G,WAAYA,EACZ3F,QACE,GAIF/B,OAAQ,CACNmK,OAAQ,MAOhB,IAAK,QAEH,OACE,kBAAC,GAAD,CACEnK,OAAQ,CAAEkB,KAAM,CAAEkJ,KAAM,YAI9B,IAAK,QAEH,OACE,kBAAC,GAAD,CACErI,QAAS,CAAEb,KAAM,cAIvB,QACE,OAAO,MA2EAmJ,CAAW,CAAEpB,OAAMvB,gBAEtB,2BACEgB,aAAW,aACX4B,KAAK,SACLpH,MAAOA,EACPiC,SAAUoE,EACVpG,IAAK,EACLC,IAAK,OAGT,gCACE,6BACE,kBAAC,GAAD,CAAMF,MAAM,eAAKsF,MAAM,aACvB,uBAAGyB,KA9JG,+CA8JN,cAGJ,kBAAC,IAAD,CAAmBM,YAAaZ,GAAoB,IAClD,4BAAQC,KAAMZ,GACZ,yBAAKnJ,UAAU,UACb,yBAAKA,UAAU,OACb,2BAAO2K,QAAQ,oBAAf,QACA,2BACEC,GAAG,mBACHH,KAAK,QACLnH,IAAK,GACLC,IAAK,IACLF,MAAO1D,EACP2F,SAAU0E,KAGd,yBAAKhK,UAAU,OACb,2BAAO2K,QAAQ,WAAf,WACA,2BACEF,KAAK,WACLP,QAASzF,EACTa,SAAU2E,KAGd,yBAAKjK,UAAU,OACb,uCACA,4BAAQsF,SAAU6E,GACfpB,GAAMrG,KAAI,SAAA0G,GAAI,OACb,4BACEJ,IAAG,qCAAgCI,EAAKJ,KACxC3F,MAAO+F,EAAKJ,KAEXI,EAAKH,oBAcZ,MAAS5I,SAASwK,MDpF5B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.02ceea68.chunk.js","sourcesContent":["for(var AZ=\"\",i=65;i<=90;i++)AZ+=String.fromCharCode(i);for(var az=\"\",i$1=97;i$1<=122;i$1++)az+=String.fromCharCode(i$1);for(var _09_=\"\",i$2=0;i$2<=9;i$2++)_09_+=\"\"+i$2;var __internal={chars:AZ+az+_09_};function randomChar(r){return r.charAt(Math.floor(Math.random()*r.length))}function randomName(r){return void 0===r&&(r=10),function a(n){return n.length>=r?n:a(n+randomChar(__internal.chars))}(randomChar(AZ+az))}export default randomName;export{__internal,randomChar};\n//# sourceMappingURL=randomName.ts.js.map\n","import{useEffect}from\"react\";import css from\"./createStyle.ts\";import randomName from\"./randomName.ts\";function useStyle(e,t){return void 0===t&&(t=randomName()),useEffect(function(){return css(e,t)}),t}export default useStyle;\n//# sourceMappingURL=useStyle.ts.js.map\n","var inject=function(e){var t=document.createElement(\"style\");return t.innerHTML=e,document.head.appendChild(t),function(){document.head.removeChild(t)}};function createStyle(e,t){return inject(\".\"+t+\" {\"+e+\"}\")}export default createStyle;\n//# sourceMappingURL=createStyle.ts.js.map\n","export{default as createStyle}from\"./createStyle.ts\";export{default as useStyle}from\"./useStyle.ts\";export{default as randomName}from\"./randomName.ts\";function classNames(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];return e&&e.filter(Boolean).join(\" \")}export{classNames};\n//# sourceMappingURL=index.ts.js.map\n","import React from \"react\";\nimport { useStyle, classNames, randomName } from \"@d10221/react-css\";\n/**\n * Roland color\n */\nexport const DEFAULT_COLOR = \"#f37d02\";\nconst circleClass = randomName();\nconst dialClass = randomName();\nconst DEFAULT_STYLES = {\n    circle: undefined,\n    dial: undefined\n};\nconst DEFAULT_CLASSES = {\n    circle: undefined,\n    dial: undefined\n};\n/**\n *\n */\nexport default function SimpleSkin(props) {\n    const { className, style, styles = DEFAULT_STYLES, classes = DEFAULT_CLASSES, ...rest } = props;\n    useStyle(`fill: ${DEFAULT_COLOR}; stroke: black; stroke-width: 5%`, circleClass);\n    useStyle(`width: 8%;height: 35%; fill: black;`, dialClass);\n    return React.createElement(\"svg\", Object.assign({ viewBox: \"0 0 100 100\", focusable: \"false\", className: className, style: {\n            // It needs to forward down the style: transform\n            ...style,\n            touchAction: \"none\"\n        } }, rest),\n        React.createElement(\"circle\", { cx: \"50%\", cy: \"50%\", r: \"47%\", className: classNames(circleClass, classes.dial), style: styles.circle }),\n        React.createElement(\"rect\", { x: \"48%\", y: \"4%\", className: classNames(dialClass, classes.dial), style: styles.dial }));\n}\n//# sourceMappingURL=index.js.map","import React from \"react\";\n/**\n * Applies style transform to children\n */\nconst Rotate = ({ rotation, translateZ, children, }) => {\n    const style = {\n        transform: `rotate(${rotation}deg) translateZ(${translateZ || 0}px)`,\n        transformOrigin: \"50% 50%\",\n    };\n    return React.createElement(React.Fragment, {}, React.Children.map(children, child => {\n        if (React.isValidElement(child)) {\n            return React.cloneElement(child, {\n                style: {\n                    ...child.props.style,\n                    ...style,\n                },\n            });\n        }\n        return child;\n    }));\n};\nexport default Rotate;\n//# sourceMappingURL=index.js.map","export const BASE_HEIGHT = 100;\nexport const DEFAULT_BUFFER_SIZE = 300;\nexport const DEFAULT_SIZE = 65;\nexport const DEFAULT_STEP = 1;\nexport const DEFAULT_MAX = 100;\nexport const DEFAULT_VALUE = 0;\nexport const DEFAULT_MIN = 1;\n/**\n * Roland color\n */\nexport const DEFAULT_COLOR = \"#f37d02\";\nexport const DEFAULT_BORDER_COLOR = \"black\";\n/** */\nexport const defaults = {\n  value: DEFAULT_VALUE,\n  min: DEFAULT_MIN,\n  max: DEFAULT_MAX,\n  step: DEFAULT_STEP,\n  size: DEFAULT_BUFFER_SIZE as number | string,\n  bufferSize: DEFAULT_BUFFER_SIZE,\n};\n","import React, { FunctionComponent } from \"react\";\nimport { DEFAULT_SIZE } from \"./defaults\";\nexport type KnobContainerProps = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n> & {\n  size: number | string;\n};\n\n/**\n * @description sets overall size removes touch action from inner children\n *\n */\nconst KnobContainer: FunctionComponent<KnobContainerProps> = ({\n  children,\n  size = DEFAULT_SIZE,\n  className,\n  style,\n  ...props\n}) => {\n  return (\n    <div\n      {...props}\n      style={{\n        width: size, // it should just work\n        height: size,\n        ...style, //but, allow override\n      }}\n      className={className}\n    >\n      {React.Children.map(children, c => {\n        if (React.isValidElement(c)) {\n          const { style, ...p } = c.props;\n          return React.cloneElement(c, {\n            ...p,\n            style: {\n              // disable children 'clicks'\n              touchAction: \"none\", // it should just work\n              pointerEvents: \"none\",\n              ...style, // but, allow override\n            } as React.CSSProperties,\n          });\n        }\n        return c;\n      })}\n    </div>\n  );\n};\n\nexport default KnobContainer;\n","/** */\nexport function snap(number: number, increment = number, offset = number) {\n  return Math.round(number / increment) * increment + offset;\n}\n/** */\nexport function getNormalizedValue(value: number, min: number, max: number) {\n  return (value - min) / (max - min);\n}\n/** */\nexport function isHtmlElement(e: any): e is HTMLElement {\n  return e instanceof HTMLElement;\n}\n/** */\nexport const cartesian2Polar: (\n  x: number[],\n  y: number[],\n) => { distance: number; degrees: number } =\n  /** */\n  ([x1, y1], [x2, y2]) => {\n    const x = x2 - x1;\n    const y = y2 - y1;\n    const distance = Math.sqrt(x * x + y * y);\n    const radians = Math.atan2(y, x);\n    const degrees = radians * (180 / Math.PI);\n    return { distance, degrees };\n  };\n/** */\nexport function getRotation({\n  value = 0,\n  min = 0,\n  max = 100,\n  bufferSize = 360,\n}) {\n  return getNormalizedValue(value, min, max) * bufferSize - bufferSize / 2;\n}\n/** */\nexport const ownerDocument = (node?: Element | Text | null | undefined) =>\n  (node && node.ownerDocument) || document;","import React, { FunctionComponent } from \"react\";\nimport { BASE_HEIGHT } from \"./defaults\";\nimport { cartesian2Polar } from \"./utils\";\n\ntype KnobOverlayProps = {\n  topPosition: number;\n  scale: number;\n  knobCenter: number[];\n  cursorPos: number[];\n  overlayColor?: string | undefined;\n};\n\nconst KnobOverlay: FunctionComponent<KnobOverlayProps> = ({\n  topPosition = 0,\n  scale = 1,\n  knobCenter = [],\n  cursorPos = [],\n  overlayColor = \"#fff\",\n}) => {\n  const baseLineStyle = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: 1,\n    height: 1,\n    backgroundColor: overlayColor,\n  };\n\n  const { distance, degrees } = cartesian2Polar(knobCenter, cursorPos);\n  const verticalLineScale = BASE_HEIGHT * scale;\n\n  const knobPath = Object.assign({}, baseLineStyle, {\n    opacity: 0.5,\n    transformOrigin: \"left center\",\n    transform:\n      `translateX(${knobCenter[0]}px) translateY(${knobCenter[1]}px) translateZ(0) ` +\n      `rotate(${degrees}deg) ` +\n      `scaleX(${distance})`,\n  });\n\n  const bodyPath = Object.assign({}, baseLineStyle, {\n    transformOrigin: \"center top\",\n    transform:\n      `translateX(${cursorPos[0]}px) translateY(${topPosition}px) translateZ(0) ` +\n      `scaleY(${verticalLineScale})`,\n  });\n\n  const topPath = Object.assign({}, baseLineStyle, {\n    transform:\n      `translateX(${cursorPos[0]}px) translateY(${topPosition}px) translateZ(0) ` +\n      `scaleX(12)`,\n  });\n\n  const centerPath = Object.assign({}, baseLineStyle, {\n    transform:\n      `translateX(${cursorPos[0]}px) ` +\n      `translateY(${topPosition + verticalLineScale / 2}px) ` +\n      `translateZ(0) scaleX(12)`,\n  });\n\n  const bottomPath = Object.assign({}, baseLineStyle, {\n    transform:\n      `translateX(${cursorPos[0]}px) ` +\n      `translateY(${topPosition + verticalLineScale}px) ` +\n      `translateZ(0) scaleX(12)`,\n  });\n\n  const styles: {[key: string]: React.CSSProperties} = {\n    knobPath,\n    bodyPath,\n    topPath,\n    centerPath,\n    bottomPath,\n    overlay: {\n      position: \"fixed\",\n      zIndex: 100,\n      top: 0,\n      left: 0,\n      width: window.innerWidth,\n      height: window.innerHeight,\n      cursor: \"ns-resize\",\n      touchAction: \"none\",\n      pointerEvents: \"none\",\n    },\n  };\n\n  return (\n    <div style={styles.overlay}>\n      <div style={styles.knobPath}></div>\n      <div style={styles.bodyPath}></div>\n      <div style={styles.topPath}></div>\n      <div style={styles.centerPath}></div>\n      <div style={styles.bottomPath}></div>\n    </div>\n  );\n};\n\nexport default KnobOverlay;\n","import KnobSkin from \"@d10221/react-knob-skin-svg-simple\"; //this should be bundled here!\nimport Rotate from \"@d10221/react-rotate\"; //this should be bundled here!\nimport React, { FunctionComponent } from \"react\";\nimport {\n  DEFAULT_BUFFER_SIZE,\n  DEFAULT_MAX,\n  DEFAULT_MIN,\n  DEFAULT_SIZE,\n  DEFAULT_STEP,\n  DEFAULT_VALUE,\n} from \"./defaults\";\nimport KnobContainer, { KnobContainerProps } from \"./KnobContainer\";\nimport KnobOverlay from \"./KnobOverlay\";\nimport useKnobState from \"./KnobState\";\nimport PointerHandler from \"./PointerHandler\";\nimport { getRotation } from \"./utils\";\ntype OnChange = (value: number) => any;\n/**\n * Creates a knob with default skin if no children provided\n * Holds internal state\n * Applies rotation via style.transform property\n * Gate for options\n * Controls overlay visibility\n */\nconst Knob: FunctionComponent<{\n  /**\n   * Holds the value to be translated to rotation amount\n   * @required\n   * @default 0\n   */\n  value: number;\n  /** @description minimum applicable value @default 0*/\n  min?: number;\n  /** @description maximum applicable value @default 100*/\n  max?: number;\n  /** Step size @default 1 */\n  step: number;\n  /**\n   * @description will be applied as 'width' and 'height' equally as style property\n   * @optional\n   * @default 65px\n   * */\n  size?: number | string | undefined;\n  /**\n   * @description total rotation in deg, ex: 360°\n   */\n  bufferSize?: number;\n  /**\n   * do not render overlay\n   * @default true\n   */\n  overlay?: boolean | undefined;\n  /**\n   * @optional\n   * @description callback with the new value\n   */\n  onChange?: OnChange | undefined;\n  /**\n   * @description allows override this component main container props see './KnobContainer'\n   * Note size is set by this props\n   * Style can be overriden by style/className\n   */\n  containerProps?: Omit<KnobContainerProps, \"size\"> | undefined | undefined;\n}> = ({\n  value = DEFAULT_VALUE,\n  min = DEFAULT_MIN,\n  max = DEFAULT_MAX,\n  step = DEFAULT_STEP,\n  size = DEFAULT_SIZE,\n  bufferSize = DEFAULT_BUFFER_SIZE,\n  overlay = true,\n  onChange: _onchange = undefined as OnChange | undefined,\n  children = undefined as React.ReactNode | undefined,\n  containerProps = undefined,\n}) => {\n  const onChange: OnChange = val =>\n    typeof _onchange === \"function\" && val !== value && _onchange(val);\n\n  const { state, move, done, start } = useKnobState(onChange);\n  const { cursorPos, knobCenter, scale, topPosition } = state;\n  const onPointerDown = PointerHandler({\n    value,\n    min,\n    max,\n    step,\n    onMove: move,\n    onDown: start,\n    onUp: done,\n  });\n  const rotation = getRotation({ value, min, max, bufferSize });\n  return (\n    <KnobContainer\n      size={size}\n      onPointerDown={onPointerDown}\n      {...containerProps}\n    >\n      <Rotate rotation={rotation}>{children || <KnobSkin />}</Rotate>\n      {!overlay || !topPosition ? null : (\n        <KnobOverlay\n          cursorPos={cursorPos}\n          knobCenter={knobCenter}\n          scale={scale}\n          topPosition={topPosition}\n        />\n      )}\n    </KnobContainer>\n  );\n};\n\nexport default Knob;\n","import { useState } from \"react\";\n/** */\nexport default function useKnobState(onChange?: (value: number) => any) {\n  const [state, setState] = useState({\n    scale: 1,\n    cursorPos: [] as number[],\n    knobCenter: [] as number[],\n    topPosition: 0,\n  });\n  return {\n    state,\n    setState,\n    start: () => {\n      /* noop */\n    },\n    move: ({\n      value = 0,\n      cursorPos = [] as number[],\n      knobCenter = [] as number[],\n      scale = 1,\n      topPosition = 0,\n    }) => {\n      if (onChange) onChange(value);\n      setState({ cursorPos, knobCenter, scale, topPosition });\n    },\n    done: () => {\n      setState({ scale: 1, cursorPos: [], knobCenter: [], topPosition: 0 });\n    },\n  };\n}\n","import React from \"react\";\nimport { BASE_HEIGHT } from \"./defaults\";\nimport {\n  isHtmlElement,\n  getNormalizedValue,\n  snap,\n  ownerDocument,\n} from \"./utils\";\n/** */\ntype OnChange = (changes: {\n  value: number;\n  scale: number;\n  cursorPos: number[];\n  knobCenter: number[];\n  topPosition: number;\n}) => any;\n/** */\ntype OnUp = () => any;\ntype OnDown = (x: {\n  clientY: number,\n  rect: number[],\n}) => any;\n/** \n * Creates an event handler with inbuilt logic\n */\ntype PointerHandler = (p: {\n  value: number;\n  min: number;\n  max: number;\n  step: number;\n  onMove: OnChange;\n  onUp?: OnUp;\n  onDown?: OnDown;\n}) => (\n    e: PointerEvent | MouseEvent | React.MouseEvent | React.PointerEvent,\n  ) => any;\n/**\n * TODO: move logic out?, leave just the events ? \n * @param config Creates parent document bound pointer events handler\n */\nconst PointerHandler: PointerHandler = ({\n  value = 0,\n  min = 0,\n  max = 100,\n  step = 1,\n  onMove,\n  onUp,\n  onDown\n}) => ev => {\n  ev.preventDefault();\n  const { currentTarget } = ev;\n  if (!isHtmlElement(currentTarget)) return;\n  const startY = ev.clientY; //hold initial Y value  \n  const knobRect = (currentTarget as any).getBoundingClientRect();\n  if (typeof onDown === \"function\") onDown({\n    // TODO: opportunity to move logic up\n    clientY: ev.clientY,\n    rect: knobRect\n  });\n  /** */\n  function onPointerMove(me: PointerEvent | MouseEvent) {\n    me.preventDefault();\n    const { clientX, clientY } = me;\n    const xDistance = Math.abs(clientX - (knobRect.left + knobRect.width / 2));\n    const scale = xDistance / 200 + 1;\n    let topPosition =\n      clientY -\n      (BASE_HEIGHT * scale -\n        getNormalizedValue(value, min, max) * (BASE_HEIGHT * scale));\n    // handle guide Y repositioning\n    if (startY < topPosition) {\n      topPosition = startY;\n    }\n    if (startY > topPosition + BASE_HEIGHT * scale) {\n      topPosition = startY - BASE_HEIGHT * scale;\n    }\n    const normalizedValue =\n      (100 - (startY - topPosition) * (100 / (BASE_HEIGHT * scale))) / 100;\n    const unnormalizedValue = snap(normalizedValue * (max - min), step, min);\n    if (unnormalizedValue !== value && onMove) {\n      onMove({\n        // TODO: opportunity to move logic up\n        value: unnormalizedValue,\n        scale,\n        cursorPos: [clientX, clientY],\n        knobCenter: [\n          knobRect.left + knobRect.width / 2,\n          knobRect.top + knobRect.height / 2,\n        ],\n        topPosition,\n      });\n    }\n  }\n  const doc = ownerDocument(currentTarget); // multi doc support ?\n  doc.addEventListener(\"pointermove\", onPointerMove, false);\n  doc.addEventListener(\n    \"pointerup\",\n    function removeEventListeners() {\n      doc.removeEventListener(\"pointermove\", onPointerMove, false);\n      doc.removeEventListener(\"pointerup\", removeEventListeners, false);\n      if (typeof onUp === \"function\") onUp(); // TODO: opportunity to move logic up\n    },\n    false,\n  );\n};\nexport default PointerHandler;\n","import React from \"react\";\nimport { useStyle, classNames, randomName } from \"@d10221/react-css\";\n/**\n * Roland color\n */\nexport const DEFAULT_COLOR = \"#f37d02\";\nconst circleClass = randomName();\nconst dialClass = randomName();\nconst DEFAULT_STYLES = {\n    circle: undefined,\n    dial: undefined\n};\nconst DEFAULT_CLASSES = {\n    circle: undefined,\n    dial: undefined\n};\n/**\n *\n */\nexport default function SimpleSkin(props) {\n    const { className, style, styles = DEFAULT_STYLES, classes = DEFAULT_CLASSES, ...rest } = props;\n    useStyle(`fill: ${DEFAULT_COLOR}; stroke: black; stroke-width: 5%`, circleClass);\n    useStyle(`width: 8%;height: 35%; fill: black;`, dialClass);\n    return React.createElement(\"svg\", Object.assign({ viewBox: \"0 0 100 100\", focusable: \"false\", className: className, style: {\n            // It needs to forward down the style: transform\n            ...style,\n            touchAction: \"none\"\n        } }, rest),\n        React.createElement(\"circle\", { cx: \"50%\", cy: \"50%\", r: \"47%\", className: classNames(circleClass, classes.dial), style: styles.circle }),\n        React.createElement(\"rect\", { x: \"48%\", y: \"4%\", className: classNames(dialClass, classes.dial), style: styles.dial }));\n}\n//# sourceMappingURL=index.js.map","/**\n * ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\n */\nlet AZ = \"\";\nfor (let i = 65; i <= 65 + 25; i++) AZ += String.fromCharCode(i);\nlet az = \"\";\nfor (let i = 97; i <= 97 + 25; i++) az += String.fromCharCode(i);\nlet _09_ = \"\";\nfor (let i = 0; i <= 9; i++) _09_ += `${i}`;\nexport const __internal = {\n  chars: AZ + az + _09_,\n};\n/** */\nexport function randomChar(chars: string) {\n  return chars.charAt(Math.floor(Math.random() * chars.length));\n}\nexport default function randomName(size = 10) {\n  function gen(seed: string): string {\n    if (seed.length >= size) return seed;\n    const next = randomChar(__internal.chars);\n    return gen(seed + next);\n  }\n  return gen(randomChar(AZ + az));\n}","/**\n *\n * @param styles\n * @returns dispose\n */\nconst inject = (styles: string) => {\n    const element = document.createElement(\"style\");\n    element.innerHTML = styles;\n    document.head.appendChild(element);\n    // dispose\n    return () => {\n      document.head.removeChild(element);\n    };\n  };\n  /**\n   *\n   * @param styles\n   * @param className\n   */\n  export default function createStyle(styles: string, className: string) {\n    return inject(`.${className} {${styles}}`);\n  }\n  ","import { useEffect } from \"react\";\nimport css from \"./createStyle\";\nimport randomName from \"./randomName\";\n/** */\nexport default function useStyle(style: string, className = randomName()) {  \n  useEffect(() => css(style, className));\n  return className;\n}\n","/** */\nexport default function classNames(\n    ...names: (string | null | undefined | false)[]\n  ): string | undefined {\n    return names && names.filter(Boolean).join(\" \");\n  }\n  ","import React from \"react\";\n/**\n * Applies style transform to children\n */\nconst Rotate = ({ rotation, translateZ, children, }) => {\n    const style = {\n        transform: `rotate(${rotation}deg) translateZ(${translateZ || 0}px)`,\n        transformOrigin: \"50% 50%\",\n    };\n    return React.createElement(React.Fragment, {}, React.Children.map(children, child => {\n        if (React.isValidElement(child)) {\n            return React.cloneElement(child, {\n                style: {\n                    ...child.props.style,\n                    ...style,\n                },\n            });\n        }\n        return child;\n    }));\n};\nexport default Rotate;\n//# sourceMappingURL=index.js.map","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ClickAwayListener from \"@d10221/react-click-away-listener\"; // external module\nimport Knob from \"@d10221/react-knob\"; //local: module\nimport SkinCss from \"@d10221/react-knob-skin-css\"; // local: module\nimport SkinSvg from \"@d10221/react-knob-skin-svg\"; // local: module\nimport SkinSvgSimple from \"@d10221/react-knob-skin-svg-simple\"; // local:module\nimport React, { ChangeEvent, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nconst repoUrl = \"https://github.com/D10221/react-knob\";\nconst issuesUrl = \"https://github.com/D10221/react-knob/issues\";\n/** */\nconst Icon = ({ label = \"\", value = \"\", className = \"icon\" }) => (\n  <span\n    className={className}\n    role=\"img\"\n    aria-label={label || \"\"}\n    aria-hidden={!Boolean(label)}\n  >\n    {value}\n  </span>\n);\nconst BUFFER_SIZE = 300;\nconst DEFAULT_SKIN = \"default\";\nconst skins = [\n  { key: \"default\", display: \"default\" },\n  { key: \"css:1\", display: \"css\" },\n  { key: \"css:2\", display: \"css custom\" },\n  { key: \"svg:1\", display: \"svg fancy\" },  \n  { key: \"svg:2\", display: \"svg custom #1\" },\n  { key: \"svg:3\", display: \"svg custom #2\" },\n];\n/**\n *\n */\nfunction renderSkin({ skin = DEFAULT_SKIN, bufferSize = BUFFER_SIZE }) {\n  switch (skin) {\n    case \"css\": {\n      // No Class\n      return <SkinCss />;\n    }\n    case \"css:2\": {     \n      return <SkinCss circleClass={\"knob-circle\"} />;\n    }\n    case \"svg:1\": {\n      // inbuild svg?\n      return (\n        <SkinSvg\n          bufferSize={bufferSize}\n          classes={\n            {\n              // labels: \"red-labels\"\n            }\n          }\n          styles={{\n            labels: {\n              // display: \"none\"\n            },\n          }}\n        />\n      );\n    }\n    case \"svg:2\": {\n      // local sample:\n      return (\n        <SkinSvgSimple\n          styles={{ dial: { fill: \"white\" } }}\n        />\n      );\n    }\n    case \"svg:3\": {\n      // local sample:\n      return (\n        <SkinSvgSimple\n          classes={{ dial: \"red-dial\" }}\n        />\n      );\n    }\n    default:\n      return null; //inbuilt skin\n  }\n}\nconst initialState = {\n  value: 0,\n  dialogOpen: false,\n  size: 65,\n  overlay: true,\n  skin: DEFAULT_SKIN,\n  bufferSize: BUFFER_SIZE,\n};\n/** */\nconst App = () => {\n  const [\n    { value, dialogOpen, size, overlay, skin, bufferSize },\n    _setState,\n  ] = useState(initialState);\n  /** */\n  function setState(update: Partial<typeof initialState>) {\n    _setState({\n      value, dialogOpen, size, overlay, skin, bufferSize,\n      ...update,\n    })\n  }\n  function onValueChanged(value: number) {\n    if (value < 0) return;\n    if (value > 100) return;\n    setState({ value });\n  }\n  function onInputValueChanged(e: ChangeEvent<HTMLInputElement>) {\n    onValueChanged(e.target.valueAsNumber);\n  }\n  function onDialogOpenChanged(open: boolean) {\n    return () =>\n      setState({ dialogOpen: open });\n  }\n  function onSizeChanged(e: ChangeEvent<HTMLInputElement>) {\n    setState({\n      size: e.target.valueAsNumber,\n    });\n  }\n  function onOverlayChanged(e: ChangeEvent<HTMLInputElement>) {\n    setState({\n      overlay: e.target.checked,\n    });\n  }\n  function onSkinChanged(e: ChangeEvent<HTMLSelectElement>) {\n    setState({\n      skin: e.currentTarget.value,\n    });\n  }\n  /** */\n  function render() {\n    return (\n      <>\n        <header>\n          <a aria-label=\"project home\" href={repoUrl}>\n            React Knob\n          </a>\n          <button className=\"clear\" onClick={onDialogOpenChanged(true)}>\n            <Icon value=\"⚙\" label=\"Settings\" />\n          </button>\n        </header>\n        <main>\n          <Knob\n            value={value}\n            onChange={onValueChanged}\n            size={size}\n            min={0}\n            max={100}\n            step={1}\n            bufferSize={bufferSize}\n            overlay={overlay}\n          >\n            {/* Children are Optional: defaults to 'KnobSkin' */}\n            {renderSkin({ skin, bufferSize })}\n          </Knob>\n          <input\n            aria-label=\"knob value\"\n            type=\"number\"\n            value={value}\n            onChange={onInputValueChanged}\n            min={0}\n            max={100}\n          />\n        </main>\n        <footer>\n          <div>\n            <Icon value=\"💬\" label=\"Feedback\" />\n            <a href={issuesUrl}>Feedback</a>\n          </div>\n        </footer>\n        <ClickAwayListener onClickAway={onDialogOpenChanged(false)}>\n          <dialog open={dialogOpen}>\n            <div className=\"column\">\n              <div className=\"row\">\n                <label htmlFor=\"size-input-range\">Size</label>\n                <input\n                  id=\"size-input-range\"\n                  type=\"range\"\n                  min={25}\n                  max={250}\n                  value={size}\n                  onChange={onSizeChanged}\n                />\n              </div>\n              <div className=\"row\">\n                <label htmlFor=\"Overlay\">Overlay</label>\n                <input\n                  type=\"checkbox\"\n                  checked={overlay}\n                  onChange={onOverlayChanged}\n                />\n              </div>\n              <div className=\"row\">\n                <label>Skin</label>\n                <select onChange={onSkinChanged}>\n                  {skins.map(skin => (\n                    <option\n                      key={`options-select-skin-option-${skin.key}`}\n                      value={skin.key}\n                    >\n                      {skin.display}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </dialog>\n        </ClickAwayListener>\n      </>\n    );\n  }\n  return render();\n};\n\nReactDOM.render(<App />, document.body);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}