{"version":3,"sources":["../../src/classNames.ts","../../src/css.ts","../../src/randomName.ts","../../src/react-css.ts","../../src/KnobContainer.tsx","../../src/defaults.ts","../../src/rotate.ts","../../src/utils.ts","../../src/PointerHandler.tsx","../../src/KnobSkin.tsx","../../src/KnobOverlay.tsx","../../src/Knob.tsx","../../src/KnobState.ts","serviceWorker.js","index.tsx"],"names":["classNames","createStyle","styles","element","document","AZ","useStyle","style","getNormalizedValue","value","number","onChange","scale","cursorPos","knobCenter","topPosition","state","setState","start","move","Boolean","window","location","hostname","match","ReactDOM","render","useState","dialogOpen","size","noOverlay","changeValue","handleInputValueChanged","e","target","valueAsNumber","handleDialogOpen","open","handleSizeChanged","onNoOverlayChanged","checked","aria-label","href","className","onClick","role","min","max","step","bufferSize","circleClass","dialClass","type","onClickAway","htmlFor","id","body","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.50244a43.chunk.js","sourcesContent":["/** */\nexport default function classNames(...names) {\n    return names && names.filter(Boolean).join(\" \");\n}\n//# sourceMappingURL=classNames.js.map","/**\n *\n * @param styles\n * @returns dispose\n */\nconst inject = (styles) => {\n    const element = document.createElement(\"style\");\n    element.innerHTML = styles;\n    document.head.appendChild(element);\n    // dispose\n    return () => {\n        document.head.removeChild(element);\n    };\n};\n/**\n *\n * @param styles\n * @param className\n */\nexport default function createStyle(styles, className) {\n    return inject(`.${className} {${styles}}`);\n}\n//# sourceMappingURL=css.js.map","/**\n * ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\n */\nlet AZ = \"\";\nfor (let i = 65; i <= 65 + 25; i++)\n    AZ += String.fromCharCode(i);\nlet az = \"\";\nfor (let i = 97; i <= 97 + 25; i++)\n    az += String.fromCharCode(i);\nlet _09_ = \"\";\nfor (let i = 0; i <= 9; i++)\n    _09_ += `${i}`;\nexport const __internal = {\n    chars: AZ + az + _09_,\n};\n/** */\nexport function randomChar(chars) {\n    return chars.charAt(Math.floor(Math.random() * chars.length));\n}\nexport default function randomName(size = 10) {\n    function gen(seed) {\n        if (seed.length >= size)\n            return seed;\n        const next = randomChar(__internal.chars);\n        return gen(seed + next);\n    }\n    return gen(randomChar(AZ + az));\n}\n//# sourceMappingURL=randomName.js.map","import { useEffect } from \"react\";\nimport css from \"./css\";\nimport randomName from \"./randomName\";\n/** */\nexport default function useStyle(style, className = randomName()) {\n    useEffect(() => css(style, className));\n    return className;\n}\n//# sourceMappingURL=react-css.js.map","import React from \"react\";\nimport classNames from \"./classNames\";\nimport useStyle from \"./react-css\";\nimport { DEFAULT_SIZE } from \"./defaults\";\nconst cssclass = `\n  margin:0;\n  padding: 0;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  justify-items: center;\n  align-items: center;\n  align-content: center;  \n    `;\n/** */\nconst KnobContainer = ({ children, size = DEFAULT_SIZE, className, style, ...props }) => {\n    return (React.createElement(\"div\", Object.assign({}, props, { style: {\n            ...style,\n            width: size,\n            height: size,\n        }, className: classNames(useStyle(cssclass), className) }), React.Children.map(children, (c => {\n        if (React.isValidElement(c)) {\n            const { style, ...p } = c.props;\n            return React.cloneElement(c, { ...p, style: {\n                    ...style,\n                    // disable children 'clicks'\n                    touchAction: \"none\",\n                    pointerEvents: \"none\",\n                } });\n        }\n        return c;\n    }))));\n};\nexport default KnobContainer;\n//# sourceMappingURL=KnobContainer.js.map","export const BASE_HEIGHT = 100;\nexport const BUFFER_SIZE = 360;\nexport const DEFAULT_SIZE = 65;\nexport const DEFAULT_STEP = 1;\nexport const DEFAULT_MAX = 100;\nexport const DEFAULT_VALUE = 0;\nexport const DEFAULT_MIN = 1;\nexport const defaults = {\n    value: DEFAULT_VALUE,\n    min: DEFAULT_MIN,\n    max: DEFAULT_MAX,\n    step: DEFAULT_STEP,\n    size: BUFFER_SIZE,\n    bufferSize: BUFFER_SIZE,\n};\n//# sourceMappingURL=defaults.js.map","import React from \"react\";\n/**\n * Applies style transform to children\n */\nconst Rotate = ({ rotation: rotate, translateZ, children, }) => {\n    const style = {\n        transform: `rotate(${rotate}deg) translateZ(${translateZ || 0}px)`,\n        transformOrigin: \"50% 50%\",\n        transformBox: \"fill-box\",\n    };\n    return React.createElement(React.Fragment, {}, React.Children.map(children, child => {\n        if (React.isValidElement(child)) {\n            return React.cloneElement(child, {\n                style: {\n                    ...child.props.style,\n                    ...style,\n                },\n            });\n        }\n        return child;\n    }));\n};\nexport default Rotate;\n//# sourceMappingURL=rotate.js.map","/** */\nexport function snap(number, increment = number, offset = number) {\n    return Math.round(number / increment) * increment + offset;\n}\n/** */\nexport function getNormalizedValue(value, min, max) {\n    return (value - min) / (max - min);\n}\n/** */\nexport function isHtmlElement(e) {\n    return e instanceof HTMLElement;\n}\n/** */\nexport const cartesian2Polar = \n/** */\n([x1, y1], [x2, y2]) => {\n    const x = x2 - x1;\n    const y = y2 - y1;\n    const distance = Math.sqrt(x * x + y * y);\n    const radians = Math.atan2(y, x);\n    const degrees = radians * (180 / Math.PI);\n    return { distance, degrees };\n};\n/** */\nexport function getRotation({ value = 0, min = 0, max = 100, bufferSize = 360, }) {\n    return getNormalizedValue(value, min, max) * bufferSize - bufferSize / 2;\n}\n/** */\nexport const ownerDocument = (node) => (node && node.ownerDocument) || document;\n//# sourceMappingURL=utils.js.map","import { BASE_HEIGHT } from \"./defaults\";\nimport { isHtmlElement, getNormalizedValue, snap, ownerDocument, } from \"./utils\";\n/**\n * TODO: move logic out?, leave just the events ?\n * @param config Creates parent document bound pointer events handler\n */\nconst PointerHandler = ({ value = 0, min = 0, max = 100, step = 1, onMove, onUp, onDown }) => ev => {\n    ev.preventDefault();\n    const { currentTarget } = ev;\n    if (!isHtmlElement(currentTarget))\n        return;\n    const startY = ev.clientY; //hold initial Y value  \n    const knobRect = currentTarget.getBoundingClientRect();\n    if (typeof onDown === \"function\")\n        onDown({\n            // TODO: opportunity to move logic up\n            clientY: ev.clientY,\n            rect: knobRect\n        });\n    /** */\n    function onPointerMove(me) {\n        me.preventDefault();\n        const { clientX, clientY } = me;\n        const xDistance = Math.abs(clientX - (knobRect.left + knobRect.width / 2));\n        const scale = xDistance / 200 + 1;\n        let topPosition = clientY -\n            (BASE_HEIGHT * scale -\n                getNormalizedValue(value, min, max) * (BASE_HEIGHT * scale));\n        // handle guide Y repositioning\n        if (startY < topPosition) {\n            topPosition = startY;\n        }\n        if (startY > topPosition + BASE_HEIGHT * scale) {\n            topPosition = startY - BASE_HEIGHT * scale;\n        }\n        const normalizedValue = (100 - (startY - topPosition) * (100 / (BASE_HEIGHT * scale))) / 100;\n        const unnormalizedValue = snap(normalizedValue * (max - min), step, min);\n        if (unnormalizedValue !== value && onMove) {\n            onMove({\n                // TODO: opportunity to move logic up\n                value: unnormalizedValue,\n                scale,\n                cursorPos: [clientX, clientY],\n                knobCenter: [\n                    knobRect.left + knobRect.width / 2,\n                    knobRect.top + knobRect.height / 2,\n                ],\n                topPosition,\n            });\n        }\n    }\n    const doc = ownerDocument(currentTarget); // multi doc support ?\n    doc.addEventListener(\"pointermove\", onPointerMove, false);\n    doc.addEventListener(\"pointerup\", function removeEventListeners() {\n        doc.removeEventListener(\"pointermove\", onPointerMove, false);\n        doc.removeEventListener(\"pointerup\", removeEventListeners, false);\n        if (typeof onUp === \"function\")\n            onUp(); // TODO: opportunity to move logic up\n    }, false);\n};\nexport default PointerHandler;\n//# sourceMappingURL=PointerHandler.js.map","import React from \"react\";\nimport useStyle from \"./react-css\";\nimport classNames from \"./classNames\";\nimport randomName from \"./randomName\";\nexport const DEFAULT_BORDER_COLOR = \"black\";\nexport const DEFAULT_COLOR = \"#F37D02\";\n/** preformance issues */\nconst circleClassName = randomName();\n/** */\nconst Circle = ({ children, className, borderColor = DEFAULT_BORDER_COLOR, color = DEFAULT_COLOR, ...props }) => {\n    return (React.createElement(\"div\", Object.assign({ className: classNames(className, useStyle(`\n      position: relative;\n      width: 85%;\n      height: 85%;\n      border-radius: 50%;\n      border: solid ${borderColor} 5px;  \n      background-color: ${color};\n      margin:0;\n      padding: 0;\n      overflow: hidden;\n      `, circleClassName)) }, props), children));\n};\n/** preformance */\nconst dialClassName = randomName();\n/** */\nconst Dial = ({ children, className, color = DEFAULT_BORDER_COLOR, ...props }) => {\n    return (React.createElement(\"div\", Object.assign({ className: classNames(className, useStyle(`\n      position: relative;\n      width: 10%;\n      height: 45%;\n      background-color: ${color};\n      top: -5%;\n      left: 50%;\n      transform: translateX(-50%);  \n      margin:0;\n      padding: 0;\n      `, dialClassName)) }, props), children));\n};\n/**\n * Default skin\n    note:\n    because the knob component injects css,\n    it's css will be last\n    on every render\n    and will have higher priority,\n    to override color from 'main' css\n    mak overriding rule as !important\n */\nconst KnobSkin = ({ color, borderColor, circleClass, dialClass, ...props }) => (React.createElement(Circle, Object.assign({}, props, { color: color, borderColor: borderColor, className: circleClass }),\n    React.createElement(Dial, { color: borderColor, className: dialClass })));\nexport default KnobSkin;\n//# sourceMappingURL=KnobSkin.js.map","import React from \"react\";\nimport { BASE_HEIGHT } from \"./defaults\";\nimport { cartesian2Polar } from \"./utils\";\nconst KnobOverlay = ({ topPosition = 0, scale = 1, knobCenter = [], cursorPos = [], overlayColor = \"#fff\", }) => {\n    const baseLineStyle = {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: 1,\n        height: 1,\n        backgroundColor: overlayColor,\n    };\n    const { distance, degrees } = cartesian2Polar(knobCenter, cursorPos);\n    const verticalLineScale = BASE_HEIGHT * scale;\n    const knobPath = Object.assign({}, baseLineStyle, {\n        opacity: 0.5,\n        transformOrigin: \"left center\",\n        transform: `translateX(${knobCenter[0]}px) translateY(${knobCenter[1]}px) translateZ(0) ` +\n            `rotate(${degrees}deg) ` +\n            `scaleX(${distance})`,\n    });\n    const bodyPath = Object.assign({}, baseLineStyle, {\n        transformOrigin: \"center top\",\n        transform: `translateX(${cursorPos[0]}px) translateY(${topPosition}px) translateZ(0) ` +\n            `scaleY(${verticalLineScale})`,\n    });\n    const topPath = Object.assign({}, baseLineStyle, {\n        transform: `translateX(${cursorPos[0]}px) translateY(${topPosition}px) translateZ(0) ` +\n            `scaleX(12)`,\n    });\n    const centerPath = Object.assign({}, baseLineStyle, {\n        transform: `translateX(${cursorPos[0]}px) ` +\n            `translateY(${topPosition + verticalLineScale / 2}px) ` +\n            `translateZ(0) scaleX(12)`,\n    });\n    const bottomPath = Object.assign({}, baseLineStyle, {\n        transform: `translateX(${cursorPos[0]}px) ` +\n            `translateY(${topPosition + verticalLineScale}px) ` +\n            `translateZ(0) scaleX(12)`,\n    });\n    const styles = {\n        knobPath,\n        bodyPath,\n        topPath,\n        centerPath,\n        bottomPath,\n        overlay: {\n            position: \"fixed\",\n            zIndex: 100,\n            top: 0,\n            left: 0,\n            width: window.innerWidth,\n            height: window.innerHeight,\n            cursor: \"ns-resize\",\n            touchAction: \"none\",\n            pointerEvents: \"none\",\n        },\n    };\n    return (React.createElement(\"div\", { style: styles.overlay },\n        React.createElement(\"div\", { style: styles.knobPath }),\n        React.createElement(\"div\", { style: styles.bodyPath }),\n        React.createElement(\"div\", { style: styles.topPath }),\n        React.createElement(\"div\", { style: styles.centerPath }),\n        React.createElement(\"div\", { style: styles.bottomPath })));\n};\nexport default KnobOverlay;\n//# sourceMappingURL=KnobOverlay.js.map","import React from \"react\";\nimport KnobContainer from \"./KnobContainer\";\nimport Rotate from \"./rotate\";\nimport PointerHandler from \"./PointerHandler\";\nimport { getRotation } from \"./utils\";\nimport KnobSkin from \"./KnobSkin\";\nimport { DEFAULT_SIZE, DEFAULT_STEP, DEFAULT_MAX, DEFAULT_MIN, DEFAULT_VALUE, } from \"./defaults\";\nimport KnobOverlay from \"./KnobOverlay\";\nimport useKnobState from \"./KnobState\";\n/**\n * Create a knob with default skin if no children provided\n */\nconst Knob = ({ value = DEFAULT_VALUE, min = DEFAULT_MIN, max = DEFAULT_MAX, step = DEFAULT_STEP, size = DEFAULT_SIZE, bufferSize = 360, \n//\nnoOverlay = false, \n// ...\nonChange: _onchange = undefined, children = undefined, containerProps = undefined, }) => {\n    const onChange = val => typeof _onchange === \"function\" && val !== value && _onchange(val);\n    const { state, move, done, start } = useKnobState(onChange);\n    const { cursorPos, knobCenter, scale, topPosition } = state;\n    const onPointerDown = PointerHandler({\n        value,\n        min,\n        max,\n        step,\n        onMove: move,\n        onDown: start,\n        onUp: done,\n    });\n    return (React.createElement(KnobContainer, Object.assign({ size: size, onPointerDown: onPointerDown }, containerProps),\n        React.createElement(Rotate, { rotation: getRotation({ value, min, max, bufferSize }) }, children || React.createElement(KnobSkin, null)),\n        noOverlay || !topPosition ? null : (React.createElement(KnobOverlay, { cursorPos: cursorPos, knobCenter: knobCenter, scale: scale, topPosition: topPosition }))));\n};\nexport default Knob;\n//# sourceMappingURL=Knob.js.map","import { useState } from \"react\";\n/** */\nexport default function useKnobState(onChange) {\n    const [state, setState] = useState({\n        scale: 1,\n        cursorPos: [],\n        knobCenter: [],\n        topPosition: 0,\n    });\n    return {\n        state,\n        setState,\n        start: () => {\n            /* noop */\n        },\n        move: ({ value = 0, cursorPos = [], knobCenter = [], scale = 1, topPosition = 0, }) => {\n            if (onChange)\n                onChange(value);\n            setState({ cursorPos, knobCenter, scale, topPosition });\n        },\n        done: () => {\n            setState({ scale: 1, cursorPos: [], knobCenter: [], topPosition: 0 });\n        },\n    };\n}\n//# sourceMappingURL=KnobState.js.map","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState, ChangeEvent } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Knob, { KnobSkin } from \"@d10221/react-knob\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ClickAwayListener from \"@d10221/react-click-away-listener\";\nconst repoUrl = \"https://github.com/D10221/react-knob\";\nconst issuesUrl = \"https://github.com/D10221/react-knob/issues\";\n\nconst App = () => {\n  const [{ value, dialogOpen, size, noOverlay }, setState] = useState({\n    value: 0,\n    dialogOpen: true,\n    size: 65,\n    noOverlay: false,\n  });\n  function changeValue(value: number) {\n    if (value < 0) return;\n    if (value > 100) return;\n    setState({ value, dialogOpen, size, noOverlay });\n  }\n  function handleInputValueChanged(e: ChangeEvent<HTMLInputElement>) {\n    changeValue(e.target.valueAsNumber);\n  }\n  function handleDialogOpen(open: boolean) {\n    return () => setState({ value, dialogOpen: open, size, noOverlay });\n  }\n  function handleSizeChanged(e: ChangeEvent<HTMLInputElement>) {\n    setState({ value, dialogOpen, size: e.target.valueAsNumber, noOverlay });\n  }\n  function onNoOverlayChanged(e: ChangeEvent<HTMLInputElement>) {\n    setState({\n      value,\n      dialogOpen,\n      noOverlay: !e.target.checked,\n      size,\n    });\n  }\n  function render() {\n    return (\n      <>\n        <header>\n          <a aria-label=\"project home\" href={repoUrl}>\n            React Knob\n          </a>\n          <button className=\"clear\" onClick={handleDialogOpen(true)}>\n            <span role=\"img\" aria-label=\"Feedback\">\n              {\"⚙\"}\n            </span>\n          </button>\n        </header>\n        <main>\n          <Knob\n            value={value}\n            onChange={changeValue}\n            size={size}\n            min={0}\n            max={100}\n            step={1}\n            bufferSize={300}\n            noOverlay={noOverlay}\n          >\n            {/* Children are Optional: defaults to 'KnobSkin' */}\n            <KnobSkin\n              /* circleClass:optional */\n              circleClass={\"knob-circle-roland\"}\n              /* dialClass:optional */\n              dialClass={\"knob-dial\"}\n            />\n          </Knob>\n          <input\n            aria-label=\"knob value\"\n            type=\"number\"\n            value={value}\n            onChange={handleInputValueChanged}\n            min={0}\n            max={100}\n          />\n        </main>\n        <footer>\n          <div>\n            <span role=\"img\" aria-label=\"Feedback\">\n              {\"💬\"}\n            </span>\n            <a href={issuesUrl}>Feedback</a>\n          </div>\n        </footer>\n        <ClickAwayListener onClickAway={handleDialogOpen(false)}>\n          <dialog open={dialogOpen}>\n            <div className=\"column\">\n              <div className=\"row\">\n                <label htmlFor=\"size-input-range\">Size</label>\n                <input\n                  id=\"size-input-range\"\n                  type=\"range\"\n                  min={25}\n                  max={250}\n                  value={size}\n                  onChange={handleSizeChanged}\n                />\n              </div>\n              <div className=\"row\">\n                <label htmlFor=\"no-overlay\">Overlay</label>\n                <input\n                  type=\"checkbox\"\n                  checked={!noOverlay}\n                  onChange={onNoOverlayChanged}\n                />\n              </div>\n            </div>\n          </dialog>\n        </ClickAwayListener>\n      </>\n    );\n  }\n  return render();\n};\n\nReactDOM.render(<App />, document.body);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}