{"version":3,"sources":["../../src/classNames.ts","../../src/css.ts","../../src/randomName.ts","../../src/react-css.ts","../../src/KnobContainer.tsx","../../src/defaults.ts","../../src/rotate.ts","../../src/utils.ts","../../src/PointerHandler.tsx","../../src/KnobHandle.tsx","../../src/KnobInner.tsx","../../src/KnobSkin.tsx","../../src/Knob.tsx","serviceWorker.js","index.tsx"],"names":["classNames","createStyle","styles","element","document","AZ","useStyle","style","getNormalizedValue","value","number","props","Boolean","window","location","hostname","match","ReactDOM","render","useState","state","setState","handleChange","aria-label","href","onChange","size","min","max","step","bufferSize","type","e","target","valueAsNumber","role","body","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa394f6e.chunk.js","sourcesContent":["/** */\nexport default function classNames(...names) {\n    return names && names.filter(Boolean).join(\" \");\n}\n//# sourceMappingURL=classNames.js.map","/**\n *\n * @param styles\n * @returns dispose\n */\nconst inject = (styles) => {\n    const element = document.createElement(\"style\");\n    element.innerHTML = styles;\n    document.head.appendChild(element);\n    // dispose\n    return () => {\n        document.head.removeChild(element);\n    };\n};\n/**\n *\n * @param styles\n * @param className\n */\nexport default function createStyle(styles, className) {\n    return inject(`.${className} {${styles}}`);\n}\n//# sourceMappingURL=css.js.map","/**\n * ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\n */\nlet AZ = \"\";\nfor (let i = 65; i <= 65 + 25; i++)\n    AZ += String.fromCharCode(i);\nlet az = \"\";\nfor (let i = 97; i <= 97 + 25; i++)\n    az += String.fromCharCode(i);\nlet _09_ = \"\";\nfor (let i = 0; i <= 9; i++)\n    _09_ += `${i}`;\nexport const __internal = {\n    chars: AZ + az + _09_,\n};\n/** */\nexport function randomChar(chars) {\n    return chars.charAt(Math.floor(Math.random() * chars.length));\n}\nexport default function randomName(size = 10) {\n    function gen(seed) {\n        if (seed.length >= size)\n            return seed;\n        const next = randomChar(__internal.chars);\n        return gen(seed + next);\n    }\n    return gen(randomChar(AZ + az));\n}\n//# sourceMappingURL=randomName.js.map","import { useEffect } from \"react\";\nimport css from \"./css\";\nimport randomName from \"./randomName\";\n/** */\nexport default function useStyle(style, className = randomName()) {\n    useEffect(() => css(style, className));\n    return className;\n}\n//# sourceMappingURL=react-css.js.map","import React from \"react\";\nimport classNames from \"./classNames\";\nimport useStyle from \"./react-css\";\nimport { DEFAULT_SIZE } from \"./defaults\";\nconst cssclass = `\n  margin:0;\n  padding: 0;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  justify-items: center;\n  align-items: center;\n  align-content: center;  \n    `;\n/** */\nconst KnobContainer = ({ children, size = DEFAULT_SIZE, className, style, ...props }) => {\n    return (React.createElement(\"div\", Object.assign({}, props, { style: {\n            ...style,\n            width: size,\n            height: size,\n        }, className: classNames(useStyle(cssclass), className) }), children));\n};\nexport default KnobContainer;\n//# sourceMappingURL=KnobContainer.js.map","export const BASE_HEIGHT = 100;\nexport const BUFFER_SIZE = 360;\nexport const DEFAULT_SIZE = 65;\nexport const DEFAULT_STEP = 1;\nexport const DEFAULT_MAX = 100;\nexport const DEFAULT_VALUE = 0;\nexport const DEFAULT_MIN = 1;\nexport const defaults = {\n    value: DEFAULT_VALUE,\n    min: DEFAULT_MIN,\n    max: DEFAULT_MAX,\n    step: DEFAULT_STEP,\n    size: BUFFER_SIZE,\n    bufferSize: BUFFER_SIZE,\n};\n//# sourceMappingURL=defaults.js.map","import React from \"react\";\n/**\n * Applies style transform to children\n */\nconst Rotate = ({ rotation: rotate, translateZ, children, }) => {\n    const style = {\n        transform: `rotate(${rotate}deg) translateZ(${translateZ || 0}px)`,\n        transformOrigin: \"50% 50%\",\n        transformBox: \"fill-box\",\n    };\n    return React.createElement(React.Fragment, {}, React.Children.map(children, child => {\n        if (React.isValidElement(child)) {\n            return React.cloneElement(child, {\n                style: {\n                    ...child.props.style,\n                    ...style,\n                },\n            });\n        }\n        return child;\n    }));\n};\nexport default Rotate;\n//# sourceMappingURL=rotate.js.map","/** */\nexport function snap(number, increment = number, offset = number) {\n    return Math.round(number / increment) * increment + offset;\n}\n/** */\nexport function getNormalizedValue(value, min, max) {\n    return (value - min) / (max - min);\n}\n/** */\nexport function isHtmlElement(e) {\n    return e instanceof HTMLElement;\n}\n/** */\nexport const cartesian2Polar = \n/** */\n([x1, y1], [x2, y2]) => {\n    const x = x2 - x1;\n    const y = y2 - y1;\n    const distance = Math.sqrt(x * x + y * y);\n    const radians = Math.atan2(y, x);\n    const degrees = radians * (180 / Math.PI);\n    return { distance, degrees };\n};\n/** */\nexport function getRotation({ value = 0, min = 0, max = 100, bufferSize = 360, }) {\n    return getNormalizedValue(value, min, max) * bufferSize - bufferSize / 2;\n}\n//# sourceMappingURL=utils.js.map","import { BASE_HEIGHT } from \"./defaults\";\nimport { isHtmlElement, getNormalizedValue, snap } from \"./utils\";\n/**\n *\n * @param config Creates documetn bound pointer events handler\n */\nconst PointerHandler = ({ value = 0, min = 0, max = 100, step = 1, onChange = undefined, }) => (ev) => {\n    ev.preventDefault();\n    const { currentTarget } = ev;\n    if (!isHtmlElement(currentTarget))\n        return;\n    const startY = ev.clientY; //hold initial Y value\n    const knobRect = currentTarget.getBoundingClientRect();\n    function onPointerMove(me) {\n        me.preventDefault();\n        const { clientX, clientY } = me;\n        const xDistance = Math.abs(clientX - (knobRect.left + knobRect.width / 2));\n        const scale = xDistance / 200 + 1;\n        let topPosition = clientY -\n            (BASE_HEIGHT * scale -\n                getNormalizedValue(value, min, max) * (BASE_HEIGHT * scale));\n        // handle guide Y repositioning\n        if (startY < topPosition) {\n            topPosition = startY;\n        }\n        if (startY > topPosition + BASE_HEIGHT * scale) {\n            topPosition = startY - BASE_HEIGHT * scale;\n        }\n        const normalizedValue = (100 - (startY - topPosition) * (100 / (BASE_HEIGHT * scale))) / 100;\n        const unnormalizedValue = snap(normalizedValue * (max - min), step, min);\n        if (unnormalizedValue !== value && onChange) {\n            onChange(unnormalizedValue);\n        }\n    }\n    document.addEventListener(\"pointermove\", onPointerMove, false);\n    document.addEventListener(\"pointerup\", function removeEventListeners() {\n        document.removeEventListener(\"pointermove\", onPointerMove, false);\n        document.removeEventListener(\"pointerup\", removeEventListeners, false);\n    }, false);\n};\nexport default PointerHandler;\n//# sourceMappingURL=PointerHandler.js.map","import React from \"react\";\nimport useStyle from \"./react-css\";\nimport classNames from \"./classNames\";\nimport randomName from \"./randomName\";\n/** */\nconst styles = `\n  position: relative;\n  width: 10%;\n  height: 45%;\n  background-color: #111111;\n  top: -5%;\n  left: 50%;\n  transform: translateX(-50%);  \n  margin:0;\n  padding: 0;\n  `;\n/** preformance */\nconst cachedName = randomName();\n/** */\nconst KnobHandle = ({ children, className, ...props }) => {\n    return (React.createElement(\"div\", Object.assign({ className: classNames(useStyle(styles, cachedName), className) }, props), children));\n};\nexport default KnobHandle;\n//# sourceMappingURL=KnobHandle.js.map","import React from \"react\";\nimport useStyle from \"./react-css\";\nimport classNames from \"./classNames\";\nimport randomName from \"./randomName\";\nconst styles = `\nposition: relative;\nwidth: 85%;\nheight: 85%;\nborder-radius: 50%;\nborder: solid #111111 5px;  \nbackground-color: #F37D02;\nmargin:0;\npadding: 0;\noverflow: hidden;\n`;\n/** preformance issues */\nconst cachedNamee = randomName();\n/** */\nconst KnobInner = ({ children, className, ...props }) => {\n    return (React.createElement(\"div\", Object.assign({ className: classNames(useStyle(styles, cachedNamee), className) }, props), children));\n};\nexport default KnobInner;\n//# sourceMappingURL=KnobInner.js.map","import React from \"react\";\nimport KnobHandle from \"./KnobHandle\";\nimport KnobInner from \"./KnobInner\";\nexport const KnobSkin = ({ ...props }) => React.createElement(KnobInner, Object.assign({}, props),\n    React.createElement(KnobHandle, null));\n//# sourceMappingURL=KnobSkin.js.map","import React from \"react\";\nimport KnobContainer from \"./KnobContainer\";\nimport Rotate from \"./rotate\";\nimport PointerHandler from \"./PointerHandler\";\nimport { getRotation } from \"./utils\";\nimport { KnobSkin } from \"./KnobSkin\";\nimport { DEFAULT_SIZE, DEFAULT_STEP, DEFAULT_MAX, DEFAULT_MIN, DEFAULT_VALUE, } from \"./defaults\";\n/**\n * Create a knob with default skin if no children provided\n */\nconst Knob = ({ value = DEFAULT_VALUE, min = DEFAULT_MIN, max = DEFAULT_MAX, step = DEFAULT_STEP, size = DEFAULT_SIZE, bufferSize = 360, \n//\nonChange = undefined, children = undefined, containerProps = undefined, }) => {\n    const onPointerDown = PointerHandler({ value, min, max, step, onChange });\n    return (React.createElement(KnobContainer, Object.assign({ size: size, onPointerDown: onPointerDown }, containerProps),\n        React.createElement(Rotate, { rotation: getRotation({ value, min, max, bufferSize }) }, children || React.createElement(KnobSkin, null))));\n};\nexport default Knob;\n//# sourceMappingURL=Knob.js.map","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Knob from \"@d10221/react-knob\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst repoUrl = \"https://github.com/D10221/react-knob\";\nconst issuesUrl = \"https://github.com/D10221/react-knob/issues\";\n\nconst App = () => {\n  const [state, setState] = useState({ value: 0 });\n  function handleChange(value: number) {\n    if (value < 0) return;\n    if (value > 100) return;\n    setState({ value });\n  }\n  function render() {\n    return (\n      <>\n        <header>\n          <a aria-label=\"project home\" href={repoUrl}>\n            React Knob\n          </a>\n        </header>\n        <main>\n          <Knob            \n            value={state.value}\n            onChange={handleChange}\n            size={65}\n            min={0}\n            max={100}\n            step={1}\n            bufferSize={300}\n          ></Knob>\n          <input\n            aria-label=\"knob value\"\n            type=\"number\"\n            value={state.value}\n            onChange={e => handleChange(e.target.valueAsNumber)}\n          />\n        </main>\n        <footer>\n          <div>\n            <span role=\"img\" aria-label=\"Feedback\">\n            {\"💬\"}\n            </span>\n            <a href={issuesUrl}>Feedback</a>\n          </div>\n        </footer>\n      </>\n    );\n  }\n  return render();\n};\n\nReactDOM.render(<App />, document.body);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}