{"ast":null,"code":"var _jsxFileName = \"/home/daniel/code/@d10221-react-knob/packages/demo/src/knob/Knob.tsx\";\nimport React, { useEffect } from \"react\";\nimport { BASE_HEIGHT } from \"./Constants\";\nimport Rotate from \"./rotate\";\nimport css from \"./css\";\nimport KnobHandle from \"./KnobHandle\";\nimport KnobInner from \"./KnobInner\";\n\nfunction snap(number, increment = number, offset = number) {\n  return Math.round(number / increment) * increment + offset;\n}\n\nfunction getNormalizedValue(value, min, max) {\n  return (value - min) / (max - min);\n}\n\nfunction isHtmlElement(e) {\n  return e instanceof HTMLElement;\n}\n\nfunction Knob({\n  value = 0,\n  min = 0,\n  max = 100,\n  step = 1,\n  size = undefined,\n  bufferSize = 360,\n  //\n  onChange = undefined,\n  children = undefined\n}) {\n  function onPointerDown(ev) {\n    ev.preventDefault();\n    const currentTarget = ev.currentTarget;\n    if (!isHtmlElement(currentTarget)) return;\n    const startY = ev.clientY; //hold initial Y value \n\n    const knobRect = currentTarget.getBoundingClientRect();\n\n    function onPointerMove(me) {\n      me.preventDefault();\n      const clientX = me.clientX,\n            clientY = me.clientY;\n      const xDistance = Math.abs(clientX - (knobRect.left + knobRect.width / 2));\n      const scale = xDistance / 200 + 1;\n      let topPosition = clientY - (BASE_HEIGHT * scale - getNormalizedValue(value, min, max) * (BASE_HEIGHT * scale)); // handle guide Y repositioning\n\n      if (startY < topPosition) {\n        topPosition = startY;\n      }\n\n      if (startY > topPosition + BASE_HEIGHT * scale) {\n        topPosition = startY - BASE_HEIGHT * scale;\n      }\n\n      const normalizedValue = (100 - (startY - topPosition) * (100 / (BASE_HEIGHT * scale))) / 100;\n      const unnormalizedValue = snap(normalizedValue * (max - min), step, min);\n\n      if (unnormalizedValue !== value) {\n        if (onChange) {\n          setTimeout(() => onChange(unnormalizedValue));\n        }\n      }\n    }\n\n    document.addEventListener(\"pointermove\", onPointerMove, false);\n    document.addEventListener(\"pointerup\", function removeEventListeners() {\n      document.removeEventListener(\"pointermove\", onPointerMove, false);\n      document.removeEventListener(\"pointerup\", removeEventListeners, false);\n    }, false);\n  }\n\n  const rotation = getNormalizedValue(value, min, max) * bufferSize - bufferSize / 2;\n  const className = \"xxx-yyy-000\";\n  const style = `\n  margin:0;\npadding: 0;\noverflow: hidden;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\njustify-items: center;\nalign-items: center;\nalign-content: center;\n  `;\n  useEffect(() => css(style, className));\n  return React.createElement(\"div\", {\n    style: {\n      width: size,\n      height: size\n    },\n    className: className,\n    onPoi: onPointerDown,\n    id: \"knob\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Rotate, {\n    rotation: rotation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, children || React.createElement(KnobInner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(KnobHandle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))));\n}\n\nexport default Knob;","map":{"version":3,"sources":["/home/daniel/code/@d10221-react-knob/packages/demo/src/knob/Knob.tsx"],"names":["React","useEffect","BASE_HEIGHT","Rotate","css","KnobHandle","KnobInner","snap","number","increment","offset","Math","round","getNormalizedValue","value","min","max","isHtmlElement","e","HTMLElement","Knob","step","size","undefined","bufferSize","onChange","children","onPointerDown","ev","preventDefault","currentTarget","startY","clientY","knobRect","getBoundingClientRect","onPointerMove","me","clientX","xDistance","abs","left","width","scale","topPosition","normalizedValue","unnormalizedValue","setTimeout","document","addEventListener","removeEventListeners","removeEventListener","rotation","className","style","height"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { BASE_HEIGHT } from \"./Constants\";\nimport Rotate from \"./rotate\";\nimport css from \"./css\";\nimport KnobHandle from \"./KnobHandle\";\nimport KnobInner from \"./KnobInner\";\n\nfunction snap(number: number, increment = number, offset = number) {\n  return Math.round(number / increment) * increment + offset;\n}\n\nfunction getNormalizedValue(value: number, min: number, max: number) {\n  return (value - min) / (max - min);\n}\nfunction isHtmlElement(e: any): e is HTMLElement {\n  return e instanceof HTMLElement;\n}\n\nfunction Knob({\n  value = 0,\n  min = 0,\n  max = 100,\n  step = 1,\n  size = undefined as number | string | undefined,\n  bufferSize = 360,\n  //\n  onChange = undefined as Function | undefined,\n  children = undefined as React.ReactNode | undefined,\n}) {\n  function onPointerDown(\n    ev: PointerEvent | MouseEvent | React.MouseEvent | React.PointerEvent,\n  ) {\n    ev.preventDefault();\n    const { currentTarget } = ev;\n    if (!isHtmlElement(currentTarget)) return;\n\n    const startY = ev.clientY; //hold initial Y value \n    const knobRect = (currentTarget as any).getBoundingClientRect();\n\n    function onPointerMove(me: PointerEvent | MouseEvent) {\n      me.preventDefault();\n      const { clientX, clientY } = me;\n\n      const xDistance = Math.abs(\n        clientX - (knobRect.left + knobRect.width / 2),\n      );\n      const scale = xDistance / 200 + 1;\n\n      let topPosition =\n        clientY -\n        (BASE_HEIGHT * scale -\n          getNormalizedValue(value, min, max) * (BASE_HEIGHT * scale));\n      // handle guide Y repositioning\n      if (startY < topPosition) {\n        topPosition = startY;\n      }\n      if (startY > topPosition + BASE_HEIGHT * scale) {\n        topPosition = startY - BASE_HEIGHT * scale;\n      }\n\n      const normalizedValue =\n        (100 - (startY - topPosition) * (100 / (BASE_HEIGHT * scale))) / 100;\n\n      const unnormalizedValue = snap(normalizedValue * (max - min), step, min);\n      if (unnormalizedValue !== value) {\n        if (onChange) {\n          setTimeout(() => onChange(unnormalizedValue));\n        }\n      }\n    }\n\n    document.addEventListener(\"pointermove\", onPointerMove, false);\n    document.addEventListener(\n      \"pointerup\",\n      function removeEventListeners() {        \n        document.removeEventListener(\"pointermove\", onPointerMove, false);\n        document.removeEventListener(\"pointerup\", removeEventListeners, false);\n      },\n      false,\n    );\n  }\n  const rotation =\n    getNormalizedValue(value, min, max) * bufferSize - bufferSize / 2;\n\n  const className = \"xxx-yyy-000\";\n  const style = `\n  margin:0;\npadding: 0;\noverflow: hidden;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\njustify-items: center;\nalign-items: center;\nalign-content: center;\n  `;\n  useEffect(() => css(style, className));\n  return (\n    <div\n      style={{\n        width: size,\n        height: size,\n      }}\n      className={className}\n      onPoi={onPointerDown}\n      id=\"knob\"\n    >\n      <Rotate rotation={rotation}>\n        {children || (\n          <KnobInner>\n            <KnobHandle />\n          </KnobInner>\n        )}\n      </Rotate>\n    </div>\n  );\n}\n\nexport default Knob;\n"]},"metadata":{},"sourceType":"module"}