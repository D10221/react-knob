{"ast":null,"code":"var _jsxFileName = \"/home/daniel/code/@d10221-react-knob/packages/demo/src/knob/Knob.tsx\";\nimport React, { useEffect } from \"react\";\nimport { BASE_HEIGHT } from \"./Constants\";\nimport Rotate from \"./rotate\";\nimport css from \"./css\";\nimport KnobHandle from \"./KnobHandle\";\nimport KnobInner from \"./KnobInner\";\n\nfunction snap(number, increment = number, offset = number) {\n  return Math.round(number / increment) * increment + offset;\n}\n\nfunction getNormalizedValue(value, min, max) {\n  return (value - min) / (max - min);\n}\n\nconst Knob = ({\n  value = 0,\n  min = 0,\n  max = 100,\n  step = 1,\n  size = undefined,\n  bufferSize = 360,\n  //\n  onChange = undefined,\n  children = undefined\n}) => {\n  function startDrag(e) {\n    e.preventDefault();\n    const knobRect = e.currentTarget.getBoundingClientRect();\n    const distance = Math.abs(e.clientX - (knobRect.left + knobRect.width / 2));\n    const scale = distance / 200 + 1;\n\n    function handleDrag(e) {\n      e.preventDefault();\n      const xPosition = e.clientX;\n      const tempY = e.clientY;\n      const xDistance = Math.abs(xPosition - (knobRect.left + knobRect.width / 2));\n      const scale = xDistance / 200 + 1;\n      let topPosition = e.clientY - (BASE_HEIGHT * scale - getNormalizedValue(value, min, max) * (BASE_HEIGHT * scale)); // handle guide Y repositioning\n\n      if (tempY < topPosition) {\n        topPosition = tempY;\n      }\n\n      if (tempY > topPosition + BASE_HEIGHT * scale) {\n        topPosition = tempY - BASE_HEIGHT * scale;\n      }\n\n      const normalizedValue = (100 - (tempY - topPosition) * (100 / (BASE_HEIGHT * scale))) / 100;\n      const unnormalizedValue = snap(normalizedValue * (max - min), step, min);\n\n      if (unnormalizedValue !== value) {\n        if (onChange) {\n          setTimeout(() => onChange(unnormalizedValue));\n        }\n      }\n    }\n\n    document.addEventListener(\"mousemove\", handleDrag, false);\n    document.addEventListener(\"mouseup\", function endDrag() {\n      document.removeEventListener(\"mousemove\", handleDrag, false);\n      document.removeEventListener(\"mouseup\", endDrag, false);\n    }, false);\n    setState({\n      xPosition: e.clientX,\n      scale\n    });\n  }\n\n  const rotation = getNormalizedValue(value, min, max) * bufferSize - bufferSize / 2;\n  const className = \"xxx-yyy-000\";\n  const style = `\n  margin:0;\npadding: 0;\noverflow: hidden;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\njustify-items: center;\nalign-items: center;\nalign-content: center;\n  `;\n  useEffect(() => css(style, className));\n  return React.createElement(\"div\", {\n    style: {\n      width: size,\n      height: size\n    },\n    className: className,\n    onMouseDown: startDrag,\n    id: \"knob\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Rotate, {\n    rotation: rotation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, children || React.createElement(KnobInner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(KnobHandle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }))));\n};\n\nexport default Knob;","map":{"version":3,"sources":["/home/daniel/code/@d10221-react-knob/packages/demo/src/knob/Knob.tsx"],"names":["React","useEffect","BASE_HEIGHT","Rotate","css","KnobHandle","KnobInner","snap","number","increment","offset","Math","round","getNormalizedValue","value","min","max","Knob","step","size","undefined","bufferSize","onChange","children","startDrag","e","preventDefault","knobRect","currentTarget","getBoundingClientRect","distance","abs","clientX","left","width","scale","handleDrag","xPosition","tempY","clientY","xDistance","topPosition","normalizedValue","unnormalizedValue","setTimeout","document","addEventListener","endDrag","removeEventListener","setState","rotation","className","style","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BASE_HEIGHT } from \"./Constants\";\nimport Rotate from \"./rotate\";\nimport css from \"./css\";\nimport KnobHandle from \"./KnobHandle\";\nimport KnobInner from \"./KnobInner\";\n\nfunction snap(number: number, increment = number, offset = number) {\n  return Math.round(number / increment) * increment + offset;\n}\n\n\nfunction getNormalizedValue(value: number, min: number, max: number) {\n  return (value - min) / (max - min);\n}\n\nconst Knob = ({\n  value = 0,\n  min = 0,\n  max = 100,\n  step = 1,\n  size = undefined as number | string | undefined,\n  bufferSize = 360,\n  //\n  onChange = undefined as Function | undefined,\n  children = undefined as React.ReactNode | undefined,\n}) => {\n \n  function startDrag(\n    e: PointerEvent | MouseEvent | React.MouseEvent | React.PointerEvent,\n  ) {\n    e.preventDefault();\n\n    const knobRect = (e.currentTarget! as HTMLElement).getBoundingClientRect();\n\n    const distance = Math.abs(e.clientX - (knobRect.left + knobRect.width / 2));\n    const scale = distance / 200 + 1;\n\n    function handleDrag(e: PointerEvent | MouseEvent) {\n      e.preventDefault();\n      const xPosition = e.clientX;\n      const tempY = e.clientY;\n\n      const xDistance = Math.abs(\n        xPosition - (knobRect.left + knobRect.width / 2),\n      );\n      const scale = xDistance / 200 + 1;\n\n      let topPosition =\n        e.clientY -\n        (BASE_HEIGHT * scale -\n          getNormalizedValue(value, min, max) * (BASE_HEIGHT * scale));\n      // handle guide Y repositioning\n      if (tempY < topPosition) {\n        topPosition = tempY;\n      }\n      if (tempY > topPosition + BASE_HEIGHT * scale) {\n        topPosition = tempY - BASE_HEIGHT * scale;\n      }\n\n      const normalizedValue =\n        (100 - (tempY - topPosition) * (100 / (BASE_HEIGHT * scale))) / 100;\n\n      const unnormalizedValue = snap(normalizedValue * (max - min), step, min);\n    \n      if (unnormalizedValue !== value) {\n        if (onChange) {\n          setTimeout(() => onChange(unnormalizedValue));\n        }\n      }\n    }\n\n    document.addEventListener(\"mousemove\", handleDrag, false);\n    document.addEventListener(\n      \"mouseup\",\n      function endDrag() {\n        document.removeEventListener(\"mousemove\", handleDrag, false);\n        document.removeEventListener(\"mouseup\", endDrag, false);       \n      },\n      false,\n    );\n\n    setState({\n      xPosition: e.clientX,\n      scale,\n    });\n  }\n  const rotation =\n    getNormalizedValue(value, min, max) * bufferSize - bufferSize / 2;\n\n  const className = \"xxx-yyy-000\";\n  const style = `\n  margin:0;\npadding: 0;\noverflow: hidden;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\njustify-items: center;\nalign-items: center;\nalign-content: center;\n  `;\n  useEffect(() => css(style, className));\n  return (\n    <div\n      style={{\n        width: size,\n        height: size,\n      }}\n      className={className}\n      onMouseDown={startDrag}\n      id=\"knob\"\n    >\n      <Rotate rotation={rotation}>\n        {children || (\n          <KnobInner>\n            <KnobHandle />\n          </KnobInner>\n        )}\n      </Rotate>\n    </div>\n  );\n};\n\nexport default Knob;\n"]},"metadata":{},"sourceType":"module"}